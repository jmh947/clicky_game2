{"version":3,"sources":["components/navBar/index.js","components/jumboTron/index.js","components/card/index.js","app.js","index.js"],"names":["NavBar","props","className","score","topScore","JumboTron","Card","console","log","superhero","map","picture","index","key","src","image","onClick","handleSubmit","id","App","state","images","pictures","topscore","newImages","cards","toString","includes","clicked","setState","undefined","sort","Math","random","this","Component","ReactDOM","render","document","getElementById"],"mappings":"0LAgBeA,MAVf,SAAgBC,GACZ,OACA,yBAAKC,UAAU,UAAf,UAAgCD,EAAME,MAAtC,iBAA2DF,EAAMG,WCStDC,MAff,SAAmBJ,GACf,OACJ,yBAAKC,UAAU,6BACP,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,eACA,uBAAGA,UAAU,QAAb,sGCmBKI,MAtBf,SAAcL,GAEV,OADFM,QAAQC,IAAIP,EAAMQ,WAEZ,yBAAKP,UAAW,cAClB,yBAAKA,UAAW,OAEhBD,EAAMQ,UAAUC,KAAI,SAACC,EAASC,GAC7B,OACE,yBAAKV,UAAW,gBAAgBW,IAAMD,GAEvC,yBAAKE,IAAKH,EAAQI,MAAOC,QAAW,kBAAMf,EAAMgB,aAAaN,EAAQO,c,OCsD9DC,E,4MA5DXC,MAAO,CACJC,OAAQC,EACRnB,MAAO,EACPoB,SAAU,G,EAIbN,aAAe,SAAAC,GACX,IAAIM,EAAY,EAAKJ,MAAMC,OAAOX,KAAI,SAAAe,GAkBlC,OAjBGA,EAAMP,GAAGQ,WAAWC,SAAST,KACzBO,EAAMG,QACL,EAAKC,SAAS,CACV1B,MAAO,KAGX,EAAK0B,SAAS,CACV1B,MAAO,EAAKiB,MAAMjB,MAAO,IAE1B,EAAKiB,MAAMjB,OAAS,EAAKiB,MAAMG,UAC9B,EAAKM,SAAS,CACVN,SAAU,EAAKH,MAAMG,SAAU,IAGvCE,EAAMG,SAAU,IAGjBH,KAEa,IAArB,EAAKL,MAAMjB,QACVqB,EAAYA,EAAUd,KAAI,SAAAe,GAEtB,OADAA,EAAMG,aAAUE,EACTL,MAGfD,EAAYA,EAAUO,MAAK,WACvB,OAAOC,KAAKC,SAAW,MAG3B,EAAKJ,SAAS,CACVR,OAAQG,K,uDAQZ,OACI,6BACG,kBAAC,EAAD,CAAQrB,MAAQ+B,KAAKd,MAAMjB,MAC3BC,SAAW8B,KAAKd,MAAMG,WAEtB,kBAAC,EAAD,MACChB,QAAQC,IAAI0B,KAAKd,MAAMC,QACxB,kBAAC,EAAD,CAAMZ,UAAYyB,KAAKd,MAAMC,OAAQJ,aAAgBiB,KAAKjB,oB,GAvDvDkB,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,U","file":"static/js/main.9c8f1463.chunk.js","sourcesContent":["import React from \"react\";\n\n// props{\n//   score:0,\n//   topScore:0\n// }\nfunction NavBar(props) {\n    return(\n    <nav className=\"navbar\">Score: {props.score} | Top Score: {props.topScore}</nav>\n\n  \n  )\n\n}\n\n\nexport default NavBar;","import React from \"react\";\n\nfunction JumboTron(props) {\n    return(\n<div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">Clicky Game</h1>\n          <p className=\"lead\">Click on a photo, but only click it once. Is your super power memory?  We will see.  Good luck!</p>\n        </div>\n      </div>  \n\n  \n  )\n\n}\n\n\nexport default JumboTron;","import React from \"react\";\n/* props{\n  Superhero\n} */\nfunction Card(props) {\n  console.log(props.superhero)\n    return(\n        <div className= \"container \">\n      <div className= \"row\">\n  \n     {props.superhero.map((picture, index) => {\n       return(\n         <div className= \"col-sm-3 mt-5\" key= {index}>\n          \n        <img src={picture.image} onClick = {() => props.handleSubmit(picture.id)}/>\n    \n         </div>\n       )\n     })}\n     \n \n    </div>\n  </div>\n    )\n}\n\nexport default Card","import React, {Component} from \"react\"\nimport NavBar from \"./components/navBar\"\nimport JumboTron from \"./components/jumboTron\"\nimport Card from \"./components/card\"\nimport pictures from \"./data/images.json\"\n\n\nclass App extends Component {\n    state= {\n       images: pictures,\n       score: 0,\n       topscore: 0 \n    }\n\n\n    handleSubmit = id=> { \n        let newImages = this.state.images.map(cards => {\n            if(cards.id.toString().includes(id)) {\n                if(cards.clicked) {\n                    this.setState({\n                        score: 0\n                    })\n                } else {\n                    this.setState({\n                        score: this.state.score +1\n                    })\n                    if(this.state.score >= this.state.topscore) {\n                        this.setState({\n                            topscore: this.state.topscore +1\n                        })\n                    } \n                    cards.clicked = true\n                }\n            }\n            return cards\n        })\n        if(this.state.score === 0) {\n            newImages = newImages.map(cards => {\n                cards.clicked = undefined\n                return cards\n            })\n        }\n        newImages = newImages.sort(()=> {\n            return Math.random() - 0.5\n        })\n\n        this.setState({\n            images: newImages\n        })\n    //  const newImages = this.state.images.sort(()=> Math.random()-0.5)\n    //   this.setState({\n    //       images: newImages\n    //   })\n    }\n    render(){\n        return(\n            <div>\n               <NavBar score= {this.state.score}\n               topScore= {this.state.topscore}\n               />\n               <JumboTron/>\n               {console.log(this.state.images)}\n               <Card superhero ={this.state.images} handleSubmit = {this.handleSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./app\"\nReactDOM.render(<App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}